# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'fr'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    # App\Controller\HomeController:
    #     tags: ['controller.service_arguments']
    #     arguments:
    #         $twig: '@twig'
    # on créer un nouveau service pour les images qui est en fait un event afin de le charger (le namespace) ensuite dans notre fichier.php (cette class correspond à un tag )
    App\Listener\ImageCacheSubscriber:
        tags:
        - {name: doctrine.event_subscriber}
    # On appel ces class pour faire fonctionner le cache via twig
    # tout d'abord on utilise l'extension cache à qui on done un tag name
    # ensuite on lui donne la class du LifeTime pour qu'il sache qu'est ce qu'il doit mettre en cache ou non 
    # puis on y ajoute le cacheProvider afin de l'instancier dans notre vue
    Twig\CacheExtension\CacheProviderInterface:
        class: Twig\CacheExtension\CacheProvider\PsrCacheAdapter

    Twig\CacheExtension\CacheStrategyInterface:
        class: Twig\CacheExtension\CacheStrategy\LifetimeCacheStrategy

    Twig\CacheExtension\Extension: 
        tags:
        - { name: twig.extension }
            